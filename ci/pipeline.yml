AWSTemplateFormatVersion: '2010-09-09'
Description: CICD Codepipeline shared resources and security


Parameters:
  BuildImageName:
    Type: String
    Description: Docker image for application build
    Default: aws/codebuild/amazonlinux2-x86_64-standard:2.0
  GitHubOAuthToken:
    Type: String
    Description: Github OAuth Token
    NoEcho: true
  GitHubAccountName:
    Type: String
    Description: Github Account Name
  GitHubRepositoryName:
    Type: String
    Description: Github Repository Name


Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ci-artifacts-${AWS::AccountId}-${AWS::Region}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ci-config-email-forwarder-${AWS::AccountId}-${AWS::Region}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled

  ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Allow
            Resource:
              - !Sub ${ArtifactBucket.Arn}
              - !Sub ${ArtifactBucket.Arn}/*
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root

  ConfigBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ConfigBucket
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Allow
            Resource:
              - !Sub ${ConfigBucket.Arn}
              - !Sub ${ConfigBucket.Arn}/*
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root

  PipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
              - Resource: '*'
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Action: iam:PassRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/ci-cloudformation
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource:
                  - !Sub arn:aws:s3:::ci-artifacts-${AWS::AccountId}-${AWS::Region}
                  - !Sub arn:aws:s3:::ci-artifacts-${AWS::AccountId}-${AWS::Region}/*
                  - !Sub arn:aws:s3:::ci-config-email-forwarder-${AWS::AccountId}-${AWS::Region}
                  - !Sub arn:aws:s3:::ci-config-email-forwarder-${AWS::AccountId}-${AWS::Region}/*

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: source
          Actions:
            - Name: source-code
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: '1'
              OutputArtifacts:
                - Name: artifact-code
              Configuration:
                Owner: !Ref GitHubAccountName
                Repo: !Ref GitHubRepositoryName
                Branch: master
                OAuthToken: !Ref GitHubOAuthToken
            - Name: source-config
              RunOrder: 2
              ActionTypeId:
                Category: Source
                Provider: S3
                Owner: AWS
                Version: '1'
              OutputArtifacts:
                - Name: artifact-config
              Configuration:
                S3Bucket: !Ref ConfigBucket
                S3ObjectKey: config.zip
                PollForSourceChanges: False
        - Name: build
          Actions:
            - Name: build
              RunOrder: 1
              InputArtifacts:
                - Name: artifact-code
              OutputArtifacts:
                - Name: artifact-build
              ActionTypeId:
                Category: Build
                Provider: CodeBuild
                Owner: AWS
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
                EnvironmentVariables: !Sub |
                  [{
                    "name": "ARTIFACT_BUCKET",
                    "value": "${ArtifactBucket}"
                  }]
        - Name: deploy
          Actions:
            - Name: create-change-set
              RunOrder: 1
              InputArtifacts:
                - Name: artifact-build
              ActionTypeId:
                Category: Deploy
                Provider: CloudFormation
                Owner: AWS
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                ChangeSetName: !Sub ${GitHubRepositoryName}-change-set
                StackName: !Ref GitHubRepositoryName
                RoleArn: !GetAtt CloudFormationRole.Arn
                TemplatePath: artifact-build::template.packaged.yml
                TemplateConfiguration: artifact-config::config.json
            - Name: manual-approval
              RunOrder: 2
              ActionTypeId:
                Category: Approval
                Provider: Manual
                Owner: AWS
                Version: '1'
            - Name: deploy-change-set
              RunOrder: 3
              ActionTypeId:
                Category: Deploy
                Provider: CloudFormation
                Owner: AWS
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                ChangeSetName: !Sub ${GitHubRepositoryName}-change-set
                StackName: !Ref GitHubRepositoryName
                RoleArn: !GetAtt CloudFormationRole.Arn

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: ci/buildspec/buildspec.build.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: !Ref BuildImageName
      ServiceRole: !GetAtt PipelineServiceRole.Arn
      EncryptionKey: alias/artifact-bucket
